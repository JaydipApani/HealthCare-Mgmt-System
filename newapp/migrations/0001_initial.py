# Generated by Django 5.0 on 2024-01-26 16:38

import django.db.models.deletion
import django.utils.timezone
import newapp.manage
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='AddDoctor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('firstName', models.CharField(max_length=15)),
                ('lastName', models.CharField(max_length=15)),
                ('dob', models.DateField()),
                ('address', models.TextField()),
                ('gender', models.CharField(max_length=15)),
                ('degree', models.CharField(max_length=50)),
                ('speciality', models.CharField(max_length=100)),
                ('phone', models.CharField(max_length=15)),
                ('email', models.EmailField(max_length=100, unique=True)),
                ('fees', models.IntegerField()),
                ('username', models.CharField(max_length=15)),
                ('password', models.CharField(max_length=15)),
                ('image', models.ImageField(upload_to='pics/doctor')),
            ],
        ),
        migrations.CreateModel(
            name='Complain',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('patient_name', models.CharField(max_length=50)),
                ('email', models.EmailField(max_length=100, unique=True)),
                ('complain_message', models.CharField(max_length=200)),
            ],
            options={
                'db_table': 'complain',
            },
        ),
        migrations.CreateModel(
            name='ContactUs',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('email', models.EmailField(max_length=100, unique=True)),
                ('subject', models.CharField(max_length=50)),
                ('msg', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'contactus',
            },
        ),
        migrations.CreateModel(
            name='Destination',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('img', models.ImageField(upload_to='pics')),
                ('name', models.CharField(max_length=100)),
                ('desc', models.TextField()),
                ('price', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Doctor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('drname', models.CharField(max_length=20)),
            ],
            options={
                'db_table': 'Doctor',
            },
        ),
        migrations.CreateModel(
            name='Feedback',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('p_name', models.CharField(max_length=50)),
                ('email', models.EmailField(max_length=100, unique=True)),
                ('rate', models.CharField(max_length=50)),
                ('message', models.CharField(max_length=200)),
            ],
            options={
                'db_table': 'feedback',
            },
        ),
        migrations.CreateModel(
            name='Patient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='pics/patient')),
                ('name', models.CharField(max_length=30)),
                ('age', models.IntegerField()),
                ('address', models.CharField(max_length=50)),
                ('mobile_number', models.CharField(max_length=14)),
            ],
            options={
                'db_table': 'patient',
            },
        ),
        migrations.CreateModel(
            name='Slot',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slot_time', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'slot',
            },
        ),
        migrations.CreateModel(
            name='Speciality',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('speciality', models.CharField(max_length=30)),
            ],
            options={
                'db_table': 'speciality',
            },
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('mobile_number', models.CharField(max_length=14)),
                ('is_verified', models.BooleanField(default=False)),
                ('email_token', models.CharField(blank=True, max_length=100, null=True)),
                ('forget_password', models.CharField(blank=True, max_length=100, null=True)),
                ('image', models.ImageField(upload_to='pics')),
                ('address', models.TextField()),
                ('last_login_time', models.DateTimeField(blank=True, null=True)),
                ('last_log_time', models.DateTimeField(blank=True, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', newapp.manage.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Appointment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('status', models.BooleanField(default=False)),
                ('doctorid', models.ForeignKey(db_column='doctor_id', on_delete=django.db.models.deletion.CASCADE, to='newapp.adddoctor')),
                ('patientid', models.ForeignKey(db_column='patient_id', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('slotid', models.ForeignKey(db_column='slot_id', on_delete=django.db.models.deletion.CASCADE, to='newapp.slot')),
            ],
            options={
                'db_table': 'appoinment',
            },
        ),
        migrations.CreateModel(
            name='Chatbot',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('time', models.TimeField(auto_now=True)),
                ('message', models.CharField(max_length=1000)),
                ('sender', models.CharField(max_length=200)),
                ('doctorid', models.ForeignKey(db_column='doctor_id', on_delete=django.db.models.deletion.CASCADE, to='newapp.adddoctor')),
                ('patientid', models.ForeignKey(db_column='patient_id', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'chatbot',
            },
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fees', models.IntegerField()),
                ('status', models.BooleanField(default=False)),
                ('appointment_id', models.ForeignKey(db_column='appointment_id', on_delete=django.db.models.deletion.CASCADE, to='newapp.appointment')),
            ],
            options={
                'db_table': 'payment',
            },
        ),
        migrations.CreateModel(
            name='ShowAppointment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('prescription', models.CharField(max_length=100)),
                ('chat', models.CharField(max_length=100)),
                ('appointment_id', models.ForeignKey(db_column='appointmentid', on_delete=django.db.models.deletion.CASCADE, to='newapp.appointment')),
            ],
            options={
                'db_table': 'showappointment',
            },
        ),
        migrations.CreateModel(
            name='DoctorSchedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('status', models.BooleanField(default=False)),
                ('doctorid', models.ForeignKey(db_column='doctor_id', on_delete=django.db.models.deletion.CASCADE, to='newapp.adddoctor')),
                ('slotid', models.ForeignKey(db_column='slot_id', on_delete=django.db.models.deletion.CASCADE, to='newapp.slot')),
            ],
            options={
                'db_table': 'DoctorSchedule',
            },
        ),
    ]
